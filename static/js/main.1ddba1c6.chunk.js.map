{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","todoClass","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","errorTittle","setErrorTittle","errorUser","setErrorUser","collectId","maxId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","trim","push","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ddba1c6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype UserType = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserType> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype TodoType = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<TodoType> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  const todoClass = classNames(\n    'TodoInfo',\n    { 'TodoInfo--completed': completed },\n  );\n\n  return (\n    <article\n      data-id={todo.id}\n      className={todoClass}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoType = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoType> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [errorTittle, setErrorTittle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const collectId = todos.map(todo => todo.id);\n\n  const maxId = Math.max(...collectId) + 1;\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setErrorTittle(false);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setErrorUser(false);\n  };\n\n  const handleAddUser = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newTodo = {\n      id: maxId,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    if (title.trim() && userId) {\n      todos.push(newTodo);\n      setTitle('');\n      setUserId(0);\n    } else {\n      setErrorTittle(title.trim() === '');\n      setErrorUser(userId === 0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddUser}\n      >\n        <div>\n          <label>\n            <span>Title: </span>\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n          {errorTittle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div>\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserId}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option key={id} value={id}>{name}</option>\n              ))}\n\n            </select>\n          </label>\n          {errorUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}